# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: horus/pb/project_manager/service.proto
# Protobuf Python Version: 5.28.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    28,
    3,
    '',
    'horus/pb/project_manager/service.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from horus.pb.logs import logs_pb2 as horus_dot_pb_dot_logs_dot_logs__pb2
from horus.pb.preprocessing import messages_pb2 as horus_dot_pb_dot_preprocessing_dot_messages__pb2
from horus.pb.license_server import messages_pb2 as horus_dot_pb_dot_license__server_dot_messages__pb2
from horus.pb import rpc_pb2 as horus_dot_pb_dot_rpc__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n&horus/pb/project_manager/service.proto\x12\x08horus.pb\x1a\x18horus/pb/logs/logs.proto\x1a%horus/pb/preprocessing/messages.proto\x1a&horus/pb/license_server/messages.proto\x1a\x12horus/pb/rpc.proto\"\xa7\x05\n\x0cLicenseLevel\x12\x30\n\x07level_1\x18\n \x01(\x0b\x32\x1d.horus.pb.LicenseLevel.Level1H\x00\x12\x30\n\x07level_2\x18\x14 \x01(\x0b\x32\x1d.horus.pb.LicenseLevel.Level2H\x00\x12\x30\n\x07level_3\x18\x1e \x01(\x0b\x32\x1d.horus.pb.LicenseLevel.Level3H\x00\x12\x30\n\x07level_4\x18( \x01(\x0b\x32\x1d.horus.pb.LicenseLevel.Level4H\x00\x12\x11\n\tprivilege\x18< \x01(\r\x1a\x65\n\x06Level1\x12Q\n\x1alicense_server_unreachable\x18\x01 \x01(\x0b\x32+.horus.pb.logs.LicenseServerConnectionErrorH\x00\x42\x08\n\x06reason\x1aT\n\x06Level2\x12@\n\x11license_not_found\x18\x01 \x01(\x0b\x32#.horus.pb.logs.LicenseNotFoundErrorH\x00\x42\x08\n\x06reason\x1a\xa5\x01\n\x06Level3\x12=\n\x0flicense_expired\x18\x01 \x01(\x0b\x32\".horus.pb.logs.LicenseExpiredErrorH\x00\x12R\n\x1blicense_server_disconnected\x18\x02 \x01(\x0b\x32+.horus.pb.logs.LicenseServerConnectionErrorH\x00\x42\x08\n\x06reason\x1aN\n\x06Level4\x12:\n\x0elicense_active\x18\x01 \x01(\x0b\x32 .horus.pb.logs.LicenseActiveInfoH\x00\x42\x08\n\x06reasonB\x07\n\x05level\"\x81\x01\n\rLicenseStatus\x12-\n\rlicense_level\x18\x01 \x01(\x0b\x32\x16.horus.pb.LicenseLevel\x12\x30\n\x0clicense_info\x18\x02 \x01(\x0b\x32\x15.horus.pb.LicenseInfoH\x00\x88\x01\x01\x42\x0f\n\r_license_info\"\x18\n\x16GetHealthStatusRequest\"\xc9\x06\n\x17GetHealthStatusResponse\x12/\n\x0elicense_status\x18\x01 \x01(\x0b\x32\x17.horus.pb.LicenseStatus\x12G\n\x0fsensor_statuses\x18\x02 \x03(\x0b\x32..horus.pb.GetHealthStatusResponse.SensorHealth\x12\x46\n\x10service_statuses\x18\x03 \x03(\x0b\x32,.horus.pb.GetHealthStatusResponse.NodeHealth\x1a\xc0\x03\n\nNodeHealth\x12\x45\n\x07service\x18\x01 \x01(\x0e\x32\x34.horus.pb.GetHealthStatusResponse.NodeHealth.Service\x12\x0f\n\x07node_id\x18\x02 \x01(\t\x12H\n\x0bnode_status\x18\x03 \x01(\x0e\x32\x33.horus.pb.GetHealthStatusResponse.NodeHealth.Status\"\xc3\x01\n\x07Service\x12\x17\n\x13SERVICE_UNSPECIFIED\x10\x00\x12\x15\n\x11SERVICE_DETECTION\x10\x01\x12\x18\n\x14SERVICE_LIDAR_RUNNER\x10\x02\x12\x18\n\x14SERVICE_NOTIFICATION\x10\x03\x12\x1c\n\x18SERVICE_POINT_AGGREGATOR\x10\x04\x12\x19\n\x15SERVICE_PREPROCESSING\x10\x05\x12\x1b\n\x17SERVICE_PROJECT_MANAGER\x10\x06\"J\n\x06Status\x12\x16\n\x12STATUS_UNSPECIFIED\x10\x00\x12\x16\n\x12STATUS_UNREACHABLE\x10\x01\x12\x10\n\x0cSTATUS_ALIVE\x10\x02\x1a\xa8\x01\n\x0cSensorHealth\x12\x1d\n\x15preprocessing_node_id\x18\x01 \x01(\t\x12\"\n\x04info\x18\x02 \x01(\x0b\x32\x14.horus.pb.SensorInfo\x12;\n\x07timeout\x18\x03 \x01(\x0b\x32(.horus.pb.logs.ServiceConnectionTimedOutH\x00\x42\x18\n\x16node_unreachable_error*z\n\x10LicensePrivilege\x12!\n\x1dLICENSE_PRIVILEGE_UNSPECIFIED\x10\x00\x12\n\n\x06LOWEST\x10\x01\x12\r\n\tSUBSCRIBE\x10\x02\x12\x13\n\x0fLICENSE_ACTIONS\x10\x04\x12\x08\n\x04READ\x10\x08\x12\t\n\x05WRITE\x10\x10\x32\x8f\x02\n\x15ProjectManagerService\x12\x82\x01\n\x0fGetHealthStatus\x12 .horus.pb.GetHealthStatusRequest\x1a!.horus.pb.GetHealthStatusResponse\"*\xc2\xab\xb1.%\x08&\x12!Provides horus health indicators.\x1aq\xc2\xab\xb1.l\x08\x03\x12hService which stores configuration for all other services and coordinates updates to this configuration.b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'horus.pb.project_manager.service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_PROJECTMANAGERSERVICE']._loaded_options = None
  _globals['_PROJECTMANAGERSERVICE']._serialized_options = b'\302\253\261.l\010\003\022hService which stores configuration for all other services and coordinates updates to this configuration.'
  _globals['_PROJECTMANAGERSERVICE'].methods_by_name['GetHealthStatus']._loaded_options = None
  _globals['_PROJECTMANAGERSERVICE'].methods_by_name['GetHealthStatus']._serialized_options = b'\302\253\261.%\010&\022!Provides horus health indicators.'
  _globals['_LICENSEPRIVILEGE']._serialized_start=1861
  _globals['_LICENSEPRIVILEGE']._serialized_end=1983
  _globals['_LICENSELEVEL']._serialized_start=178
  _globals['_LICENSELEVEL']._serialized_end=857
  _globals['_LICENSELEVEL_LEVEL1']._serialized_start=413
  _globals['_LICENSELEVEL_LEVEL1']._serialized_end=514
  _globals['_LICENSELEVEL_LEVEL2']._serialized_start=516
  _globals['_LICENSELEVEL_LEVEL2']._serialized_end=600
  _globals['_LICENSELEVEL_LEVEL3']._serialized_start=603
  _globals['_LICENSELEVEL_LEVEL3']._serialized_end=768
  _globals['_LICENSELEVEL_LEVEL4']._serialized_start=770
  _globals['_LICENSELEVEL_LEVEL4']._serialized_end=848
  _globals['_LICENSESTATUS']._serialized_start=860
  _globals['_LICENSESTATUS']._serialized_end=989
  _globals['_GETHEALTHSTATUSREQUEST']._serialized_start=991
  _globals['_GETHEALTHSTATUSREQUEST']._serialized_end=1015
  _globals['_GETHEALTHSTATUSRESPONSE']._serialized_start=1018
  _globals['_GETHEALTHSTATUSRESPONSE']._serialized_end=1859
  _globals['_GETHEALTHSTATUSRESPONSE_NODEHEALTH']._serialized_start=1240
  _globals['_GETHEALTHSTATUSRESPONSE_NODEHEALTH']._serialized_end=1688
  _globals['_GETHEALTHSTATUSRESPONSE_NODEHEALTH_SERVICE']._serialized_start=1417
  _globals['_GETHEALTHSTATUSRESPONSE_NODEHEALTH_SERVICE']._serialized_end=1612
  _globals['_GETHEALTHSTATUSRESPONSE_NODEHEALTH_STATUS']._serialized_start=1614
  _globals['_GETHEALTHSTATUSRESPONSE_NODEHEALTH_STATUS']._serialized_end=1688
  _globals['_GETHEALTHSTATUSRESPONSE_SENSORHEALTH']._serialized_start=1691
  _globals['_GETHEALTHSTATUSRESPONSE_SENSORHEALTH']._serialized_end=1859
  _globals['_PROJECTMANAGERSERVICE']._serialized_start=1986
  _globals['_PROJECTMANAGERSERVICE']._serialized_end=2257
# @@protoc_insertion_point(module_scope)
