// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.28.3
// source: horus/pb/profiling.proto

package profiling_pb

import (
	metadata_pb "github.com/seoulrobotics/horus-sdk/go/proto/config/metadata_pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProfilingSet_ProfiledService int32

const (
	ProfilingSet_SERVICE_UNSPECIFIED   ProfilingSet_ProfiledService = 0
	ProfilingSet_PREPROCESSING_SERVICE ProfilingSet_ProfiledService = 1
	ProfilingSet_DETECTION_SERVICE     ProfilingSet_ProfiledService = 2
)

// Enum value maps for ProfilingSet_ProfiledService.
var (
	ProfilingSet_ProfiledService_name = map[int32]string{
		0: "SERVICE_UNSPECIFIED",
		1: "PREPROCESSING_SERVICE",
		2: "DETECTION_SERVICE",
	}
	ProfilingSet_ProfiledService_value = map[string]int32{
		"SERVICE_UNSPECIFIED":   0,
		"PREPROCESSING_SERVICE": 1,
		"DETECTION_SERVICE":     2,
	}
)

func (x ProfilingSet_ProfiledService) Enum() *ProfilingSet_ProfiledService {
	p := new(ProfilingSet_ProfiledService)
	*p = x
	return p
}

func (x ProfilingSet_ProfiledService) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProfilingSet_ProfiledService) Descriptor() protoreflect.EnumDescriptor {
	return file_horus_pb_profiling_proto_enumTypes[0].Descriptor()
}

func (ProfilingSet_ProfiledService) Type() protoreflect.EnumType {
	return &file_horus_pb_profiling_proto_enumTypes[0]
}

func (x ProfilingSet_ProfiledService) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction int32

const (
	ProfilingSet_ProfiledDuration_PerformanceHint_CONFIG_PARAMETER_ACTION_UNSPECIFIED ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction = 0
	ProfilingSet_ProfiledDuration_PerformanceHint_INCREASE                            ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction = 1
	ProfilingSet_ProfiledDuration_PerformanceHint_DECREASE                            ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction = 2
)

// Enum value maps for ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction.
var (
	ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction_name = map[int32]string{
		0: "CONFIG_PARAMETER_ACTION_UNSPECIFIED",
		1: "INCREASE",
		2: "DECREASE",
	}
	ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction_value = map[string]int32{
		"CONFIG_PARAMETER_ACTION_UNSPECIFIED": 0,
		"INCREASE":                            1,
		"DECREASE":                            2,
	}
)

func (x ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction) Enum() *ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction {
	p := new(ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction)
	*p = x
	return p
}

func (x ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction) Descriptor() protoreflect.EnumDescriptor {
	return file_horus_pb_profiling_proto_enumTypes[1].Descriptor()
}

func (ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction) Type() protoreflect.EnumType {
	return &file_horus_pb_profiling_proto_enumTypes[1]
}

func (x ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// / A profiling set.
type ProfilingSet struct {
	state                      protoimpl.MessageState                    `protogen:"opaque.v1"`
	xxx_hidden_ProfiledService ProfilingSet_ProfiledService              `protobuf:"varint,1,opt,name=profiled_service,json=profiledService,proto3,enum=horus.pb.ProfilingSet_ProfiledService" json:"profiled_service,omitempty"`
	xxx_hidden_ProcessingTimes *[]*ProfilingSet_ProfiledDurationMapEntry `protobuf:"bytes,2,rep,name=processing_times,json=processingTimes,proto3" json:"processing_times,omitempty"`
	xxx_hidden_ResourceUsage   *ProfilingSet_ResourceUsage               `protobuf:"bytes,3,opt,name=resource_usage,json=resourceUsage,proto3,oneof" json:"resource_usage,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ProfilingSet) Reset() {
	*x = ProfilingSet{}
	mi := &file_horus_pb_profiling_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfilingSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfilingSet) ProtoMessage() {}

func (x *ProfilingSet) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_profiling_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProfilingSet) GetProfiledService() ProfilingSet_ProfiledService {
	if x != nil {
		return x.xxx_hidden_ProfiledService
	}
	return ProfilingSet_SERVICE_UNSPECIFIED
}

func (x *ProfilingSet) GetProcessingTimes() []*ProfilingSet_ProfiledDurationMapEntry {
	if x != nil {
		if x.xxx_hidden_ProcessingTimes != nil {
			return *x.xxx_hidden_ProcessingTimes
		}
	}
	return nil
}

func (x *ProfilingSet) GetResourceUsage() *ProfilingSet_ResourceUsage {
	if x != nil {
		return x.xxx_hidden_ResourceUsage
	}
	return nil
}

func (x *ProfilingSet) SetProfiledService(v ProfilingSet_ProfiledService) {
	x.xxx_hidden_ProfiledService = v
}

func (x *ProfilingSet) SetProcessingTimes(v []*ProfilingSet_ProfiledDurationMapEntry) {
	x.xxx_hidden_ProcessingTimes = &v
}

func (x *ProfilingSet) SetResourceUsage(v *ProfilingSet_ResourceUsage) {
	x.xxx_hidden_ResourceUsage = v
}

func (x *ProfilingSet) HasResourceUsage() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ResourceUsage != nil
}

func (x *ProfilingSet) ClearResourceUsage() {
	x.xxx_hidden_ResourceUsage = nil
}

type ProfilingSet_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// / The profiled service.
	ProfiledService ProfilingSet_ProfiledService
	ProcessingTimes []*ProfilingSet_ProfiledDurationMapEntry
	// / Resource usage profiling of the service.
	ResourceUsage *ProfilingSet_ResourceUsage
}

func (b0 ProfilingSet_builder) Build() *ProfilingSet {
	m0 := &ProfilingSet{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ProfiledService = b.ProfiledService
	x.xxx_hidden_ProcessingTimes = &b.ProcessingTimes
	x.xxx_hidden_ResourceUsage = b.ResourceUsage
	return m0
}

// / The profiling of a service including the total service latency (total
// / processing time + total idle time) and the profiling details.
type ServiceProfiling struct {
	state                               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DetailsProfilingSet      *ProfilingSet          `protobuf:"bytes,1,opt,name=details_profiling_set,json=detailsProfilingSet,proto3" json:"details_profiling_set,omitempty"`
	xxx_hidden_TotalServiceLatency      *metadata_pb.Duration  `protobuf:"bytes,2,opt,name=total_service_latency,json=totalServiceLatency,proto3" json:"total_service_latency,omitempty"`
	xxx_hidden_IdleTimeBeforeProcessing *metadata_pb.Duration  `protobuf:"bytes,4,opt,name=idle_time_before_processing,json=idleTimeBeforeProcessing,proto3" json:"idle_time_before_processing,omitempty"`
	xxx_hidden_IntraComponentIdleTime   *metadata_pb.Duration  `protobuf:"bytes,5,opt,name=intra_component_idle_time,json=intraComponentIdleTime,proto3" json:"intra_component_idle_time,omitempty"`
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *ServiceProfiling) Reset() {
	*x = ServiceProfiling{}
	mi := &file_horus_pb_profiling_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceProfiling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceProfiling) ProtoMessage() {}

func (x *ServiceProfiling) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_profiling_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServiceProfiling) GetDetailsProfilingSet() *ProfilingSet {
	if x != nil {
		return x.xxx_hidden_DetailsProfilingSet
	}
	return nil
}

func (x *ServiceProfiling) GetTotalServiceLatency() *metadata_pb.Duration {
	if x != nil {
		return x.xxx_hidden_TotalServiceLatency
	}
	return nil
}

func (x *ServiceProfiling) GetIdleTimeBeforeProcessing() *metadata_pb.Duration {
	if x != nil {
		return x.xxx_hidden_IdleTimeBeforeProcessing
	}
	return nil
}

func (x *ServiceProfiling) GetIntraComponentIdleTime() *metadata_pb.Duration {
	if x != nil {
		return x.xxx_hidden_IntraComponentIdleTime
	}
	return nil
}

func (x *ServiceProfiling) SetDetailsProfilingSet(v *ProfilingSet) {
	x.xxx_hidden_DetailsProfilingSet = v
}

func (x *ServiceProfiling) SetTotalServiceLatency(v *metadata_pb.Duration) {
	x.xxx_hidden_TotalServiceLatency = v
}

func (x *ServiceProfiling) SetIdleTimeBeforeProcessing(v *metadata_pb.Duration) {
	x.xxx_hidden_IdleTimeBeforeProcessing = v
}

func (x *ServiceProfiling) SetIntraComponentIdleTime(v *metadata_pb.Duration) {
	x.xxx_hidden_IntraComponentIdleTime = v
}

func (x *ServiceProfiling) HasDetailsProfilingSet() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DetailsProfilingSet != nil
}

func (x *ServiceProfiling) HasTotalServiceLatency() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TotalServiceLatency != nil
}

func (x *ServiceProfiling) HasIdleTimeBeforeProcessing() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_IdleTimeBeforeProcessing != nil
}

func (x *ServiceProfiling) HasIntraComponentIdleTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_IntraComponentIdleTime != nil
}

func (x *ServiceProfiling) ClearDetailsProfilingSet() {
	x.xxx_hidden_DetailsProfilingSet = nil
}

func (x *ServiceProfiling) ClearTotalServiceLatency() {
	x.xxx_hidden_TotalServiceLatency = nil
}

func (x *ServiceProfiling) ClearIdleTimeBeforeProcessing() {
	x.xxx_hidden_IdleTimeBeforeProcessing = nil
}

func (x *ServiceProfiling) ClearIntraComponentIdleTime() {
	x.xxx_hidden_IntraComponentIdleTime = nil
}

type ServiceProfiling_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// / The profiling details.
	DetailsProfilingSet *ProfilingSet
	// / The total service latency which is a sum of the total idle time and the
	// / total processing time (when the data is actually being processed)
	TotalServiceLatency *metadata_pb.Duration
	// / The idle time before the service starts processing the data, i.e. from
	// / bundle time to the first processing time.
	IdleTimeBeforeProcessing *metadata_pb.Duration
	// / The intra idle time of the service (when the data is not being processed
	// / between two processing times).
	IntraComponentIdleTime *metadata_pb.Duration
}

func (b0 ServiceProfiling_builder) Build() *ServiceProfiling {
	m0 := &ServiceProfiling{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_DetailsProfilingSet = b.DetailsProfilingSet
	x.xxx_hidden_TotalServiceLatency = b.TotalServiceLatency
	x.xxx_hidden_IdleTimeBeforeProcessing = b.IdleTimeBeforeProcessing
	x.xxx_hidden_IntraComponentIdleTime = b.IntraComponentIdleTime
	return m0
}

type PreprocessingServicePointCloudProfiling struct {
	state                               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ServiceProfiling         *ServiceProfiling      `protobuf:"bytes,1,opt,name=service_profiling,json=serviceProfiling,proto3" json:"service_profiling,omitempty"`
	xxx_hidden_PointCloudSendingLatency *metadata_pb.Duration  `protobuf:"bytes,2,opt,name=point_cloud_sending_latency,json=pointCloudSendingLatency,proto3" json:"point_cloud_sending_latency,omitempty"`
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *PreprocessingServicePointCloudProfiling) Reset() {
	*x = PreprocessingServicePointCloudProfiling{}
	mi := &file_horus_pb_profiling_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreprocessingServicePointCloudProfiling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreprocessingServicePointCloudProfiling) ProtoMessage() {}

func (x *PreprocessingServicePointCloudProfiling) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_profiling_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PreprocessingServicePointCloudProfiling) GetServiceProfiling() *ServiceProfiling {
	if x != nil {
		return x.xxx_hidden_ServiceProfiling
	}
	return nil
}

func (x *PreprocessingServicePointCloudProfiling) GetPointCloudSendingLatency() *metadata_pb.Duration {
	if x != nil {
		return x.xxx_hidden_PointCloudSendingLatency
	}
	return nil
}

func (x *PreprocessingServicePointCloudProfiling) SetServiceProfiling(v *ServiceProfiling) {
	x.xxx_hidden_ServiceProfiling = v
}

func (x *PreprocessingServicePointCloudProfiling) SetPointCloudSendingLatency(v *metadata_pb.Duration) {
	x.xxx_hidden_PointCloudSendingLatency = v
}

func (x *PreprocessingServicePointCloudProfiling) HasServiceProfiling() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ServiceProfiling != nil
}

func (x *PreprocessingServicePointCloudProfiling) HasPointCloudSendingLatency() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PointCloudSendingLatency != nil
}

func (x *PreprocessingServicePointCloudProfiling) ClearServiceProfiling() {
	x.xxx_hidden_ServiceProfiling = nil
}

func (x *PreprocessingServicePointCloudProfiling) ClearPointCloudSendingLatency() {
	x.xxx_hidden_PointCloudSendingLatency = nil
}

type PreprocessingServicePointCloudProfiling_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// / The preprocessing service profiling for a given point cloud.
	ServiceProfiling *ServiceProfiling
	// / The latency to send the given point cloud from the preprocessing
	// / service to the detection service.
	PointCloudSendingLatency *metadata_pb.Duration
}

func (b0 PreprocessingServicePointCloudProfiling_builder) Build() *PreprocessingServicePointCloudProfiling {
	m0 := &PreprocessingServicePointCloudProfiling{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ServiceProfiling = b.ServiceProfiling
	x.xxx_hidden_PointCloudSendingLatency = b.PointCloudSendingLatency
	return m0
}

// / The frame profiling. It includes important profiling for a frame such as
// / the overall latency or its bundling time.
type FrameProfiling struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_OverallFrameLatency  *metadata_pb.Duration  `protobuf:"bytes,1,opt,name=overall_frame_latency,json=overallFrameLatency,proto3" json:"overall_frame_latency,omitempty"`
	xxx_hidden_FrameBundlingLatency *metadata_pb.Duration  `protobuf:"bytes,2,opt,name=frame_bundling_latency,json=frameBundlingLatency,proto3" json:"frame_bundling_latency,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *FrameProfiling) Reset() {
	*x = FrameProfiling{}
	mi := &file_horus_pb_profiling_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrameProfiling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameProfiling) ProtoMessage() {}

func (x *FrameProfiling) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_profiling_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FrameProfiling) GetOverallFrameLatency() *metadata_pb.Duration {
	if x != nil {
		return x.xxx_hidden_OverallFrameLatency
	}
	return nil
}

func (x *FrameProfiling) GetFrameBundlingLatency() *metadata_pb.Duration {
	if x != nil {
		return x.xxx_hidden_FrameBundlingLatency
	}
	return nil
}

func (x *FrameProfiling) SetOverallFrameLatency(v *metadata_pb.Duration) {
	x.xxx_hidden_OverallFrameLatency = v
}

func (x *FrameProfiling) SetFrameBundlingLatency(v *metadata_pb.Duration) {
	x.xxx_hidden_FrameBundlingLatency = v
}

func (x *FrameProfiling) HasOverallFrameLatency() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OverallFrameLatency != nil
}

func (x *FrameProfiling) HasFrameBundlingLatency() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FrameBundlingLatency != nil
}

func (x *FrameProfiling) ClearOverallFrameLatency() {
	x.xxx_hidden_OverallFrameLatency = nil
}

func (x *FrameProfiling) ClearFrameBundlingLatency() {
	x.xxx_hidden_FrameBundlingLatency = nil
}

type FrameProfiling_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// / The overall latency of the frame (from the earliest point cloud arrival
	// / inside the frame to the publishing of the frame).
	OverallFrameLatency *metadata_pb.Duration
	// / The time we spent waiting for the frame to be bundled (this is an
	// / important metric as this time does not depend on us but on the lidars
	// / publishing time).
	// / It has to be substracted to the overall frame latency to get the total
	// / overhead of our pipeline for the frame.
	FrameBundlingLatency *metadata_pb.Duration
}

func (b0 FrameProfiling_builder) Build() *FrameProfiling {
	m0 := &FrameProfiling{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OverallFrameLatency = b.OverallFrameLatency
	x.xxx_hidden_FrameBundlingLatency = b.FrameBundlingLatency
	return m0
}

// / A bundled profiling set bundling bundled frame profiling set of the
// / detection service with the profiling sets of each points in the frame
// / (generated by the preprocessing service).
type BundledFrameProfilingSet struct {
	state                                              protoimpl.MessageState                                                       `protogen:"opaque.v1"`
	xxx_hidden_FrameTimestamp                          *metadata_pb.Timestamp                                                       `protobuf:"bytes,3,opt,name=frame_timestamp,json=frameTimestamp,proto3" json:"frame_timestamp,omitempty"`
	xxx_hidden_FrameProfiling                          *FrameProfiling                                                              `protobuf:"bytes,4,opt,name=frame_profiling,json=frameProfiling,proto3" json:"frame_profiling,omitempty"`
	xxx_hidden_DetectionServiceProfiling               *ServiceProfiling                                                            `protobuf:"bytes,5,opt,name=detection_service_profiling,json=detectionServiceProfiling,proto3" json:"detection_service_profiling,omitempty"`
	xxx_hidden_PreprocessingServicePointCloudProfiling *[]*BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry `protobuf:"bytes,7,rep,name=preprocessing_service_point_cloud_profiling,json=preprocessingServicePointCloudProfiling,proto3" json:"preprocessing_service_point_cloud_profiling,omitempty"`
	unknownFields                                      protoimpl.UnknownFields
	sizeCache                                          protoimpl.SizeCache
}

func (x *BundledFrameProfilingSet) Reset() {
	*x = BundledFrameProfilingSet{}
	mi := &file_horus_pb_profiling_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BundledFrameProfilingSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundledFrameProfilingSet) ProtoMessage() {}

func (x *BundledFrameProfilingSet) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_profiling_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BundledFrameProfilingSet) GetFrameTimestamp() *metadata_pb.Timestamp {
	if x != nil {
		return x.xxx_hidden_FrameTimestamp
	}
	return nil
}

func (x *BundledFrameProfilingSet) GetFrameProfiling() *FrameProfiling {
	if x != nil {
		return x.xxx_hidden_FrameProfiling
	}
	return nil
}

func (x *BundledFrameProfilingSet) GetDetectionServiceProfiling() *ServiceProfiling {
	if x != nil {
		return x.xxx_hidden_DetectionServiceProfiling
	}
	return nil
}

func (x *BundledFrameProfilingSet) GetPreprocessingServicePointCloudProfiling() []*BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry {
	if x != nil {
		if x.xxx_hidden_PreprocessingServicePointCloudProfiling != nil {
			return *x.xxx_hidden_PreprocessingServicePointCloudProfiling
		}
	}
	return nil
}

func (x *BundledFrameProfilingSet) SetFrameTimestamp(v *metadata_pb.Timestamp) {
	x.xxx_hidden_FrameTimestamp = v
}

func (x *BundledFrameProfilingSet) SetFrameProfiling(v *FrameProfiling) {
	x.xxx_hidden_FrameProfiling = v
}

func (x *BundledFrameProfilingSet) SetDetectionServiceProfiling(v *ServiceProfiling) {
	x.xxx_hidden_DetectionServiceProfiling = v
}

func (x *BundledFrameProfilingSet) SetPreprocessingServicePointCloudProfiling(v []*BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry) {
	x.xxx_hidden_PreprocessingServicePointCloudProfiling = &v
}

func (x *BundledFrameProfilingSet) HasFrameTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FrameTimestamp != nil
}

func (x *BundledFrameProfilingSet) HasFrameProfiling() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FrameProfiling != nil
}

func (x *BundledFrameProfilingSet) HasDetectionServiceProfiling() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DetectionServiceProfiling != nil
}

func (x *BundledFrameProfilingSet) ClearFrameTimestamp() {
	x.xxx_hidden_FrameTimestamp = nil
}

func (x *BundledFrameProfilingSet) ClearFrameProfiling() {
	x.xxx_hidden_FrameProfiling = nil
}

func (x *BundledFrameProfilingSet) ClearDetectionServiceProfiling() {
	x.xxx_hidden_DetectionServiceProfiling = nil
}

type BundledFrameProfilingSet_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// / The associated frame timestamp (the point cloud arrival average timestamp
	// / that the frame contains).
	FrameTimestamp                          *metadata_pb.Timestamp
	FrameProfiling                          *FrameProfiling
	DetectionServiceProfiling               *ServiceProfiling
	PreprocessingServicePointCloudProfiling []*BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry
}

func (b0 BundledFrameProfilingSet_builder) Build() *BundledFrameProfilingSet {
	m0 := &BundledFrameProfilingSet{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_FrameTimestamp = b.FrameTimestamp
	x.xxx_hidden_FrameProfiling = b.FrameProfiling
	x.xxx_hidden_DetectionServiceProfiling = b.DetectionServiceProfiling
	x.xxx_hidden_PreprocessingServicePointCloudProfiling = &b.PreprocessingServicePointCloudProfiling
	return m0
}

// / A profiling info sent to the notification service and forward to its
// / subscribers.
type ProfilingInfo struct {
	state                   protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_ProfilingSet isProfilingInfo_ProfilingSet `protobuf_oneof:"profiling_set"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ProfilingInfo) Reset() {
	*x = ProfilingInfo{}
	mi := &file_horus_pb_profiling_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfilingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfilingInfo) ProtoMessage() {}

func (x *ProfilingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_profiling_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProfilingInfo) GetGeneralProfilingSet() *ProfilingSet {
	if x != nil {
		if x, ok := x.xxx_hidden_ProfilingSet.(*profilingInfo_GeneralProfilingSet); ok {
			return x.GeneralProfilingSet
		}
	}
	return nil
}

func (x *ProfilingInfo) GetBundledFrameProfilingSet() *BundledFrameProfilingSet {
	if x != nil {
		if x, ok := x.xxx_hidden_ProfilingSet.(*profilingInfo_BundledFrameProfilingSet); ok {
			return x.BundledFrameProfilingSet
		}
	}
	return nil
}

func (x *ProfilingInfo) SetGeneralProfilingSet(v *ProfilingSet) {
	if v == nil {
		x.xxx_hidden_ProfilingSet = nil
		return
	}
	x.xxx_hidden_ProfilingSet = &profilingInfo_GeneralProfilingSet{v}
}

func (x *ProfilingInfo) SetBundledFrameProfilingSet(v *BundledFrameProfilingSet) {
	if v == nil {
		x.xxx_hidden_ProfilingSet = nil
		return
	}
	x.xxx_hidden_ProfilingSet = &profilingInfo_BundledFrameProfilingSet{v}
}

func (x *ProfilingInfo) HasProfilingSet() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ProfilingSet != nil
}

func (x *ProfilingInfo) HasGeneralProfilingSet() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_ProfilingSet.(*profilingInfo_GeneralProfilingSet)
	return ok
}

func (x *ProfilingInfo) HasBundledFrameProfilingSet() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_ProfilingSet.(*profilingInfo_BundledFrameProfilingSet)
	return ok
}

func (x *ProfilingInfo) ClearProfilingSet() {
	x.xxx_hidden_ProfilingSet = nil
}

func (x *ProfilingInfo) ClearGeneralProfilingSet() {
	if _, ok := x.xxx_hidden_ProfilingSet.(*profilingInfo_GeneralProfilingSet); ok {
		x.xxx_hidden_ProfilingSet = nil
	}
}

func (x *ProfilingInfo) ClearBundledFrameProfilingSet() {
	if _, ok := x.xxx_hidden_ProfilingSet.(*profilingInfo_BundledFrameProfilingSet); ok {
		x.xxx_hidden_ProfilingSet = nil
	}
}

const ProfilingInfo_ProfilingSet_not_set_case case_ProfilingInfo_ProfilingSet = 0
const ProfilingInfo_GeneralProfilingSet_case case_ProfilingInfo_ProfilingSet = 1
const ProfilingInfo_BundledFrameProfilingSet_case case_ProfilingInfo_ProfilingSet = 2

func (x *ProfilingInfo) WhichProfilingSet() case_ProfilingInfo_ProfilingSet {
	if x == nil {
		return ProfilingInfo_ProfilingSet_not_set_case
	}
	switch x.xxx_hidden_ProfilingSet.(type) {
	case *profilingInfo_GeneralProfilingSet:
		return ProfilingInfo_GeneralProfilingSet_case
	case *profilingInfo_BundledFrameProfilingSet:
		return ProfilingInfo_BundledFrameProfilingSet_case
	default:
		return ProfilingInfo_ProfilingSet_not_set_case
	}
}

type ProfilingInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_ProfilingSet:
	// / General profiling set of a service.
	GeneralProfilingSet *ProfilingSet
	// / Bundled frame profiling set (pipeline profiling sets of the detection
	// / and preprocessing services).
	BundledFrameProfilingSet *BundledFrameProfilingSet
	// -- end of xxx_hidden_ProfilingSet
}

func (b0 ProfilingInfo_builder) Build() *ProfilingInfo {
	m0 := &ProfilingInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.GeneralProfilingSet != nil {
		x.xxx_hidden_ProfilingSet = &profilingInfo_GeneralProfilingSet{b.GeneralProfilingSet}
	}
	if b.BundledFrameProfilingSet != nil {
		x.xxx_hidden_ProfilingSet = &profilingInfo_BundledFrameProfilingSet{b.BundledFrameProfilingSet}
	}
	return m0
}

type case_ProfilingInfo_ProfilingSet protoreflect.FieldNumber

func (x case_ProfilingInfo_ProfilingSet) String() string {
	md := file_horus_pb_profiling_proto_msgTypes[5].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isProfilingInfo_ProfilingSet interface {
	isProfilingInfo_ProfilingSet()
}

type profilingInfo_GeneralProfilingSet struct {
	// / General profiling set of a service.
	GeneralProfilingSet *ProfilingSet `protobuf:"bytes,1,opt,name=general_profiling_set,json=generalProfilingSet,proto3,oneof"`
}

type profilingInfo_BundledFrameProfilingSet struct {
	// / Bundled frame profiling set (pipeline profiling sets of the detection
	// / and preprocessing services).
	BundledFrameProfilingSet *BundledFrameProfilingSet `protobuf:"bytes,2,opt,name=bundled_frame_profiling_set,json=bundledFrameProfilingSet,proto3,oneof"`
}

func (*profilingInfo_GeneralProfilingSet) isProfilingInfo_ProfilingSet() {}

func (*profilingInfo_BundledFrameProfilingSet) isProfilingInfo_ProfilingSet() {}

type ProfilingSet_ProfiledDuration struct {
	state                       protoimpl.MessageState                            `protogen:"opaque.v1"`
	xxx_hidden_Duration         *metadata_pb.Duration                             `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	xxx_hidden_PerformanceHints *[]*ProfilingSet_ProfiledDuration_PerformanceHint `protobuf:"bytes,2,rep,name=performance_hints,json=performanceHints,proto3" json:"performance_hints,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ProfilingSet_ProfiledDuration) Reset() {
	*x = ProfilingSet_ProfiledDuration{}
	mi := &file_horus_pb_profiling_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfilingSet_ProfiledDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfilingSet_ProfiledDuration) ProtoMessage() {}

func (x *ProfilingSet_ProfiledDuration) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_profiling_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProfilingSet_ProfiledDuration) GetDuration() *metadata_pb.Duration {
	if x != nil {
		return x.xxx_hidden_Duration
	}
	return nil
}

func (x *ProfilingSet_ProfiledDuration) GetPerformanceHints() []*ProfilingSet_ProfiledDuration_PerformanceHint {
	if x != nil {
		if x.xxx_hidden_PerformanceHints != nil {
			return *x.xxx_hidden_PerformanceHints
		}
	}
	return nil
}

func (x *ProfilingSet_ProfiledDuration) SetDuration(v *metadata_pb.Duration) {
	x.xxx_hidden_Duration = v
}

func (x *ProfilingSet_ProfiledDuration) SetPerformanceHints(v []*ProfilingSet_ProfiledDuration_PerformanceHint) {
	x.xxx_hidden_PerformanceHints = &v
}

func (x *ProfilingSet_ProfiledDuration) HasDuration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Duration != nil
}

func (x *ProfilingSet_ProfiledDuration) ClearDuration() {
	x.xxx_hidden_Duration = nil
}

type ProfilingSet_ProfiledDuration_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// / The duration of the profiled section.
	Duration *metadata_pb.Duration
	// / A list of hints on how to improve the profiled section.
	PerformanceHints []*ProfilingSet_ProfiledDuration_PerformanceHint
}

func (b0 ProfilingSet_ProfiledDuration_builder) Build() *ProfilingSet_ProfiledDuration {
	m0 := &ProfilingSet_ProfiledDuration{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Duration = b.Duration
	x.xxx_hidden_PerformanceHints = &b.PerformanceHints
	return m0
}

// / A map of profiling measurements id to profiled durations.
type ProfilingSet_ProfiledDurationMapEntry struct {
	state            protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_Key   string                         `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	xxx_hidden_Value *ProfilingSet_ProfiledDuration `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ProfilingSet_ProfiledDurationMapEntry) Reset() {
	*x = ProfilingSet_ProfiledDurationMapEntry{}
	mi := &file_horus_pb_profiling_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfilingSet_ProfiledDurationMapEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfilingSet_ProfiledDurationMapEntry) ProtoMessage() {}

func (x *ProfilingSet_ProfiledDurationMapEntry) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_profiling_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProfilingSet_ProfiledDurationMapEntry) GetKey() string {
	if x != nil {
		return x.xxx_hidden_Key
	}
	return ""
}

func (x *ProfilingSet_ProfiledDurationMapEntry) GetValue() *ProfilingSet_ProfiledDuration {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return nil
}

func (x *ProfilingSet_ProfiledDurationMapEntry) SetKey(v string) {
	x.xxx_hidden_Key = v
}

func (x *ProfilingSet_ProfiledDurationMapEntry) SetValue(v *ProfilingSet_ProfiledDuration) {
	x.xxx_hidden_Value = v
}

func (x *ProfilingSet_ProfiledDurationMapEntry) HasValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Value != nil
}

func (x *ProfilingSet_ProfiledDurationMapEntry) ClearValue() {
	x.xxx_hidden_Value = nil
}

type ProfilingSet_ProfiledDurationMapEntry_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key   string
	Value *ProfilingSet_ProfiledDuration
}

func (b0 ProfilingSet_ProfiledDurationMapEntry_builder) Build() *ProfilingSet_ProfiledDurationMapEntry {
	m0 := &ProfilingSet_ProfiledDurationMapEntry{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Key = b.Key
	x.xxx_hidden_Value = b.Value
	return m0
}

type ProfilingSet_ResourceUsage struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CpuUsagePercentage uint32                 `protobuf:"varint,1,opt,name=cpu_usage_percentage,json=cpuUsagePercentage,proto3" json:"cpu_usage_percentage,omitempty"`
	xxx_hidden_MemoryUsage        uint64                 `protobuf:"varint,2,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ProfilingSet_ResourceUsage) Reset() {
	*x = ProfilingSet_ResourceUsage{}
	mi := &file_horus_pb_profiling_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfilingSet_ResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfilingSet_ResourceUsage) ProtoMessage() {}

func (x *ProfilingSet_ResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_profiling_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProfilingSet_ResourceUsage) GetCpuUsagePercentage() uint32 {
	if x != nil {
		return x.xxx_hidden_CpuUsagePercentage
	}
	return 0
}

func (x *ProfilingSet_ResourceUsage) GetMemoryUsage() uint64 {
	if x != nil {
		return x.xxx_hidden_MemoryUsage
	}
	return 0
}

func (x *ProfilingSet_ResourceUsage) SetCpuUsagePercentage(v uint32) {
	x.xxx_hidden_CpuUsagePercentage = v
}

func (x *ProfilingSet_ResourceUsage) SetMemoryUsage(v uint64) {
	x.xxx_hidden_MemoryUsage = v
}

type ProfilingSet_ResourceUsage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// / CPU usage of the service in percentage.
	// / The percentage can be above 100% if multiple cores are used.
	CpuUsagePercentage uint32
	// / Memory usage of the service in bytes.
	MemoryUsage uint64
}

func (b0 ProfilingSet_ResourceUsage_builder) Build() *ProfilingSet_ResourceUsage {
	m0 := &ProfilingSet_ResourceUsage{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CpuUsagePercentage = b.CpuUsagePercentage
	x.xxx_hidden_MemoryUsage = b.MemoryUsage
	return m0
}

type ProfilingSet_ProfiledDuration_PerformanceHint struct {
	state                            protoimpl.MessageState                                              `protogen:"opaque.v1"`
	xxx_hidden_ConfigParameterAction ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction `protobuf:"varint,1,opt,name=config_parameter_action,json=configParameterAction,proto3,enum=horus.pb.ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction" json:"config_parameter_action,omitempty"`
	xxx_hidden_ConfigParameterName   string                                                              `protobuf:"bytes,2,opt,name=config_parameter_name,json=configParameterName,proto3" json:"config_parameter_name,omitempty"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *ProfilingSet_ProfiledDuration_PerformanceHint) Reset() {
	*x = ProfilingSet_ProfiledDuration_PerformanceHint{}
	mi := &file_horus_pb_profiling_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfilingSet_ProfiledDuration_PerformanceHint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfilingSet_ProfiledDuration_PerformanceHint) ProtoMessage() {}

func (x *ProfilingSet_ProfiledDuration_PerformanceHint) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_profiling_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProfilingSet_ProfiledDuration_PerformanceHint) GetConfigParameterAction() ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction {
	if x != nil {
		return x.xxx_hidden_ConfigParameterAction
	}
	return ProfilingSet_ProfiledDuration_PerformanceHint_CONFIG_PARAMETER_ACTION_UNSPECIFIED
}

func (x *ProfilingSet_ProfiledDuration_PerformanceHint) GetConfigParameterName() string {
	if x != nil {
		return x.xxx_hidden_ConfigParameterName
	}
	return ""
}

func (x *ProfilingSet_ProfiledDuration_PerformanceHint) SetConfigParameterAction(v ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction) {
	x.xxx_hidden_ConfigParameterAction = v
}

func (x *ProfilingSet_ProfiledDuration_PerformanceHint) SetConfigParameterName(v string) {
	x.xxx_hidden_ConfigParameterName = v
}

type ProfilingSet_ProfiledDuration_PerformanceHint_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ConfigParameterAction ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction
	ConfigParameterName   string
}

func (b0 ProfilingSet_ProfiledDuration_PerformanceHint_builder) Build() *ProfilingSet_ProfiledDuration_PerformanceHint {
	m0 := &ProfilingSet_ProfiledDuration_PerformanceHint{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ConfigParameterAction = b.ConfigParameterAction
	x.xxx_hidden_ConfigParameterName = b.ConfigParameterName
	return m0
}

type BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry struct {
	state            protoimpl.MessageState                   `protogen:"opaque.v1"`
	xxx_hidden_Key   string                                   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	xxx_hidden_Value *PreprocessingServicePointCloudProfiling `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry) Reset() {
	*x = BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry{}
	mi := &file_horus_pb_profiling_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry) ProtoMessage() {}

func (x *BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_profiling_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry) GetKey() string {
	if x != nil {
		return x.xxx_hidden_Key
	}
	return ""
}

func (x *BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry) GetValue() *PreprocessingServicePointCloudProfiling {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return nil
}

func (x *BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry) SetKey(v string) {
	x.xxx_hidden_Key = v
}

func (x *BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry) SetValue(v *PreprocessingServicePointCloudProfiling) {
	x.xxx_hidden_Value = v
}

func (x *BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry) HasValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Value != nil
}

func (x *BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry) ClearValue() {
	x.xxx_hidden_Value = nil
}

type BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key   string
	Value *PreprocessingServicePointCloudProfiling
}

func (b0 BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry_builder) Build() *BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry {
	m0 := &BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Key = b.Key
	x.xxx_hidden_Value = b.Value
	return m0
}

var File_horus_pb_profiling_proto protoreflect.FileDescriptor

var file_horus_pb_profiling_proto_rawDesc = []byte{
	0x0a, 0x18, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x70, 0x62, 0x1a, 0x1e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x08, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x74, 0x12, 0x51, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x1a, 0xd6, 0x03, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x64, 0x0a, 0x11, 0x70,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x52,
	0x10, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x69, 0x6e, 0x74,
	0x73, 0x1a, 0xab, 0x02, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x85, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x69, 0x6e, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a,
	0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x5c, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x23, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x47, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x43, 0x52, 0x45, 0x41, 0x53, 0x45, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x43, 0x52, 0x45, 0x41, 0x53, 0x45, 0x10, 0x02, 0x1a,
	0x6b, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x64, 0x0a, 0x0d,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a,
	0x14, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x63, 0x70, 0x75,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x5c, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19,
	0x0a, 0x15, 0x50, 0x52, 0x45, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x54,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x02,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xce, 0x02, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x4a, 0x0a, 0x15, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x52,
	0x13, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x74, 0x12, 0x46, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x51, 0x0a, 0x1b,
	0x69, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x18, 0x69, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12,
	0x4d, 0x0a, 0x19, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4a, 0x04,
	0x08, 0x03, 0x10, 0x04, 0x22, 0xc5, 0x01, 0x0a, 0x27, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67,
	0x12, 0x47, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x51, 0x0a, 0x1b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x18, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xa2, 0x01, 0x0a,
	0x0e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x12,
	0x46, 0x0a, 0x15, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x13, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x48, 0x0a, 0x16, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x22, 0xcb, 0x04, 0x0a, 0x18, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x12, 0x3c,
	0x0a, 0x0f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x41, 0x0a, 0x0f,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x52,
	0x0e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x12,
	0x5a, 0x0a, 0x1b, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67,
	0x52, 0x19, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0xb0, 0x01, 0x0a, 0x2b,
	0x70, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x52, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x27, 0x70, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x1a, 0x8c,
	0x01, 0x0a, 0x2f, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x47, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4a, 0x04, 0x08,
	0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x22,
	0xd3, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x4c, 0x0a, 0x15, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x12,
	0x63, 0x0a, 0x1b, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x18, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_horus_pb_profiling_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_horus_pb_profiling_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_horus_pb_profiling_proto_goTypes = []any{
	(ProfilingSet_ProfiledService)(0),                                                // 0: horus.pb.ProfilingSet.ProfiledService
	(ProfilingSet_ProfiledDuration_PerformanceHint_ConfigParameterAction)(0),         // 1: horus.pb.ProfilingSet.ProfiledDuration.PerformanceHint.ConfigParameterAction
	(*ProfilingSet)(nil),                                                             // 2: horus.pb.ProfilingSet
	(*ServiceProfiling)(nil),                                                         // 3: horus.pb.ServiceProfiling
	(*PreprocessingServicePointCloudProfiling)(nil),                                  // 4: horus.pb.PreprocessingServicePointCloudProfiling
	(*FrameProfiling)(nil),                                                           // 5: horus.pb.FrameProfiling
	(*BundledFrameProfilingSet)(nil),                                                 // 6: horus.pb.BundledFrameProfilingSet
	(*ProfilingInfo)(nil),                                                            // 7: horus.pb.ProfilingInfo
	(*ProfilingSet_ProfiledDuration)(nil),                                            // 8: horus.pb.ProfilingSet.ProfiledDuration
	(*ProfilingSet_ProfiledDurationMapEntry)(nil),                                    // 9: horus.pb.ProfilingSet.ProfiledDurationMapEntry
	(*ProfilingSet_ResourceUsage)(nil),                                               // 10: horus.pb.ProfilingSet.ResourceUsage
	(*ProfilingSet_ProfiledDuration_PerformanceHint)(nil),                            // 11: horus.pb.ProfilingSet.ProfiledDuration.PerformanceHint
	(*BundledFrameProfilingSet_PreprocessingServicePointCloudProfilingMapEntry)(nil), // 12: horus.pb.BundledFrameProfilingSet.PreprocessingServicePointCloudProfilingMapEntry
	(*metadata_pb.Duration)(nil),                                                     // 13: horus.pb.Duration
	(*metadata_pb.Timestamp)(nil),                                                    // 14: horus.pb.Timestamp
}
var file_horus_pb_profiling_proto_depIdxs = []int32{
	0,  // 0: horus.pb.ProfilingSet.profiled_service:type_name -> horus.pb.ProfilingSet.ProfiledService
	9,  // 1: horus.pb.ProfilingSet.processing_times:type_name -> horus.pb.ProfilingSet.ProfiledDurationMapEntry
	10, // 2: horus.pb.ProfilingSet.resource_usage:type_name -> horus.pb.ProfilingSet.ResourceUsage
	2,  // 3: horus.pb.ServiceProfiling.details_profiling_set:type_name -> horus.pb.ProfilingSet
	13, // 4: horus.pb.ServiceProfiling.total_service_latency:type_name -> horus.pb.Duration
	13, // 5: horus.pb.ServiceProfiling.idle_time_before_processing:type_name -> horus.pb.Duration
	13, // 6: horus.pb.ServiceProfiling.intra_component_idle_time:type_name -> horus.pb.Duration
	3,  // 7: horus.pb.PreprocessingServicePointCloudProfiling.service_profiling:type_name -> horus.pb.ServiceProfiling
	13, // 8: horus.pb.PreprocessingServicePointCloudProfiling.point_cloud_sending_latency:type_name -> horus.pb.Duration
	13, // 9: horus.pb.FrameProfiling.overall_frame_latency:type_name -> horus.pb.Duration
	13, // 10: horus.pb.FrameProfiling.frame_bundling_latency:type_name -> horus.pb.Duration
	14, // 11: horus.pb.BundledFrameProfilingSet.frame_timestamp:type_name -> horus.pb.Timestamp
	5,  // 12: horus.pb.BundledFrameProfilingSet.frame_profiling:type_name -> horus.pb.FrameProfiling
	3,  // 13: horus.pb.BundledFrameProfilingSet.detection_service_profiling:type_name -> horus.pb.ServiceProfiling
	12, // 14: horus.pb.BundledFrameProfilingSet.preprocessing_service_point_cloud_profiling:type_name -> horus.pb.BundledFrameProfilingSet.PreprocessingServicePointCloudProfilingMapEntry
	2,  // 15: horus.pb.ProfilingInfo.general_profiling_set:type_name -> horus.pb.ProfilingSet
	6,  // 16: horus.pb.ProfilingInfo.bundled_frame_profiling_set:type_name -> horus.pb.BundledFrameProfilingSet
	13, // 17: horus.pb.ProfilingSet.ProfiledDuration.duration:type_name -> horus.pb.Duration
	11, // 18: horus.pb.ProfilingSet.ProfiledDuration.performance_hints:type_name -> horus.pb.ProfilingSet.ProfiledDuration.PerformanceHint
	8,  // 19: horus.pb.ProfilingSet.ProfiledDurationMapEntry.value:type_name -> horus.pb.ProfilingSet.ProfiledDuration
	1,  // 20: horus.pb.ProfilingSet.ProfiledDuration.PerformanceHint.config_parameter_action:type_name -> horus.pb.ProfilingSet.ProfiledDuration.PerformanceHint.ConfigParameterAction
	4,  // 21: horus.pb.BundledFrameProfilingSet.PreprocessingServicePointCloudProfilingMapEntry.value:type_name -> horus.pb.PreprocessingServicePointCloudProfiling
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_horus_pb_profiling_proto_init() }
func file_horus_pb_profiling_proto_init() {
	if File_horus_pb_profiling_proto != nil {
		return
	}
	file_horus_pb_profiling_proto_msgTypes[0].OneofWrappers = []any{}
	file_horus_pb_profiling_proto_msgTypes[5].OneofWrappers = []any{
		(*profilingInfo_GeneralProfilingSet)(nil),
		(*profilingInfo_BundledFrameProfilingSet)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_horus_pb_profiling_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_horus_pb_profiling_proto_goTypes,
		DependencyIndexes: file_horus_pb_profiling_proto_depIdxs,
		EnumInfos:         file_horus_pb_profiling_proto_enumTypes,
		MessageInfos:      file_horus_pb_profiling_proto_msgTypes,
	}.Build()
	File_horus_pb_profiling_proto = out.File
	file_horus_pb_profiling_proto_rawDesc = nil
	file_horus_pb_profiling_proto_goTypes = nil
	file_horus_pb_profiling_proto_depIdxs = nil
}
