// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.28.3
// source: horus/pb/point/point_message.proto

package point_message_pb

import (
	metadata_pb "github.com/seoulrobotics/horus-sdk/go/proto/config/metadata_pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PointAttribute enum
// @note Each enum value should be a power of two.
// @note No attributes should have the same value.
// @note The enums are sorted by priority so that the first element has the
// highest priority. ATTRIBUTE_NONE is a special case and can not be combined
// with others.
// @note For visualization to be applied correctly, any update to this enum
// also needs to be applied to the fragment shader
// `attribute-pointcloud-fragment.glsl`.
type PointAttribute int32

const (
	PointAttribute_ATTRIBUTE_NONE        PointAttribute = 0
	PointAttribute_OUT_OF_RANGE          PointAttribute = 1
	PointAttribute_GROUND                PointAttribute = 2
	PointAttribute_LOW_INTENSITY         PointAttribute = 4
	PointAttribute_EXCLUSION_ZONE        PointAttribute = 8
	PointAttribute_STATIC                PointAttribute = 16
	PointAttribute_STATIC_DETECTION_ZONE PointAttribute = 32
	PointAttribute_REFLECTION_ZONE       PointAttribute = 64
	PointAttribute_STATIC_EXCLUSION_ZONE PointAttribute = 128
	PointAttribute_SPARSE_NOISE          PointAttribute = 256
)

// Enum value maps for PointAttribute.
var (
	PointAttribute_name = map[int32]string{
		0:   "ATTRIBUTE_NONE",
		1:   "OUT_OF_RANGE",
		2:   "GROUND",
		4:   "LOW_INTENSITY",
		8:   "EXCLUSION_ZONE",
		16:  "STATIC",
		32:  "STATIC_DETECTION_ZONE",
		64:  "REFLECTION_ZONE",
		128: "STATIC_EXCLUSION_ZONE",
		256: "SPARSE_NOISE",
	}
	PointAttribute_value = map[string]int32{
		"ATTRIBUTE_NONE":        0,
		"OUT_OF_RANGE":          1,
		"GROUND":                2,
		"LOW_INTENSITY":         4,
		"EXCLUSION_ZONE":        8,
		"STATIC":                16,
		"STATIC_DETECTION_ZONE": 32,
		"REFLECTION_ZONE":       64,
		"STATIC_EXCLUSION_ZONE": 128,
		"SPARSE_NOISE":          256,
	}
)

func (x PointAttribute) Enum() *PointAttribute {
	p := new(PointAttribute)
	*p = x
	return p
}

func (x PointAttribute) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PointAttribute) Descriptor() protoreflect.EnumDescriptor {
	return file_horus_pb_point_point_message_proto_enumTypes[0].Descriptor()
}

func (PointAttribute) Type() protoreflect.EnumType {
	return &file_horus_pb_point_point_message_proto_enumTypes[0]
}

func (x PointAttribute) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Message frame for single point cloud.
//
// Warning: All the timestamps used in the point frame messages are system clock
// timestamps. This means that the services exchanging point frame messages
// must be time synced in order to use these timestamps.
type PointFrame struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id     uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	xxx_hidden_Header *PointFrame_Header     `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	xxx_hidden_Points *AttributedPoints      `protobuf:"bytes,9,opt,name=points,proto3,oneof" json:"points,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PointFrame) Reset() {
	*x = PointFrame{}
	mi := &file_horus_pb_point_point_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PointFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointFrame) ProtoMessage() {}

func (x *PointFrame) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_point_point_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PointFrame) GetId() uint32 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *PointFrame) GetHeader() *PointFrame_Header {
	if x != nil {
		return x.xxx_hidden_Header
	}
	return nil
}

func (x *PointFrame) GetPoints() *AttributedPoints {
	if x != nil {
		return x.xxx_hidden_Points
	}
	return nil
}

func (x *PointFrame) SetId(v uint32) {
	x.xxx_hidden_Id = v
}

func (x *PointFrame) SetHeader(v *PointFrame_Header) {
	x.xxx_hidden_Header = v
}

func (x *PointFrame) SetPoints(v *AttributedPoints) {
	x.xxx_hidden_Points = v
}

func (x *PointFrame) HasHeader() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Header != nil
}

func (x *PointFrame) HasPoints() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Points != nil
}

func (x *PointFrame) ClearHeader() {
	x.xxx_hidden_Header = nil
}

func (x *PointFrame) ClearPoints() {
	x.xxx_hidden_Points = nil
}

type PointFrame_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// This is incremented for each point frame.
	// CompositeKey(id, header.lidar_id) uniquely id this object.
	Id     uint32
	Header *PointFrame_Header
	// TODO(HRS-1898): This is kept until the frontend handles
	// decompression/dequantization
	Points *AttributedPoints
}

func (b0 PointFrame_builder) Build() *PointFrame {
	m0 := &PointFrame{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	x.xxx_hidden_Header = b.Header
	x.xxx_hidden_Points = b.Points
	return m0
}

// / Point cloud data with attributes.
// /
// / @note The attributes are all or none. If the attributes are nonempty, the
// / number of attributes should be equal to the number of points.
type AttributedPoints struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FlattenedPoints []float32              `protobuf:"fixed32,1,rep,packed,name=flattened_points,json=flattenedPoints,proto3" json:"flattened_points,omitempty"`
	xxx_hidden_Attributes      []uint32               `protobuf:"fixed32,2,rep,packed,name=attributes,proto3" json:"attributes,omitempty"`
	xxx_hidden_Intensities     []uint32               `protobuf:"fixed32,3,rep,packed,name=intensities,proto3" json:"intensities,omitempty"`
	xxx_hidden_RingIndices     []byte                 `protobuf:"bytes,5,opt,name=ring_indices,json=ringIndices,proto3" json:"ring_indices,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *AttributedPoints) Reset() {
	*x = AttributedPoints{}
	mi := &file_horus_pb_point_point_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributedPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributedPoints) ProtoMessage() {}

func (x *AttributedPoints) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_point_point_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AttributedPoints) GetFlattenedPoints() []float32 {
	if x != nil {
		return x.xxx_hidden_FlattenedPoints
	}
	return nil
}

func (x *AttributedPoints) GetAttributes() []uint32 {
	if x != nil {
		return x.xxx_hidden_Attributes
	}
	return nil
}

func (x *AttributedPoints) GetIntensities() []uint32 {
	if x != nil {
		return x.xxx_hidden_Intensities
	}
	return nil
}

func (x *AttributedPoints) GetRingIndices() []byte {
	if x != nil {
		return x.xxx_hidden_RingIndices
	}
	return nil
}

func (x *AttributedPoints) SetFlattenedPoints(v []float32) {
	x.xxx_hidden_FlattenedPoints = v
}

func (x *AttributedPoints) SetAttributes(v []uint32) {
	x.xxx_hidden_Attributes = v
}

func (x *AttributedPoints) SetIntensities(v []uint32) {
	x.xxx_hidden_Intensities = v
}

func (x *AttributedPoints) SetRingIndices(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_RingIndices = v
}

type AttributedPoints_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// 3D point buffer of which stride length is 3 floats (12 bytes).
	FlattenedPoints []float32
	// Point attributes such as ground and static. Each element consists of two
	// `uint16` attributes to save space. We have to use fixed32 as uint16 is not
	// available in Protobuf.
	// The first two bytes (low) are occupied by the even index of the attributes
	// and the rest (high) are occupied by the odd index. Each element can be
	// decomposed as follows:
	// ```cpp
	// // direct memory copy
	// std::memcpy(point_attributes.data(), attributes.data(), num_attributes *
	// sizeof(std::uint16_t));
	//
	// // iterative decomposition
	// point_attributes[2 * i + 0] = attributes[i] & 0xFFFF
	// point_attributes[2 * i + 1] = (attributes[i] >> 16) & 0xFFFF
	// ```
	Attributes []uint32
	// / Bytes corresponding to packed uint16 intensities for each point.
	// / We have to use fixed32 as uint16 is not available in Protobuf.
	Intensities []uint32
	// / Bytes corresponding to packed uint16 ring index for each point.
	// / We have to use fixed32 as uint16 is not available in Protobuf.
	RingIndices []byte
}

func (b0 AttributedPoints_builder) Build() *AttributedPoints {
	m0 := &AttributedPoints{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_FlattenedPoints = b.FlattenedPoints
	x.xxx_hidden_Attributes = b.Attributes
	x.xxx_hidden_Intensities = b.Intensities
	x.xxx_hidden_RingIndices = b.RingIndices
	return m0
}

// Processed point cloud data from a single lidar.
type ProcessedPointsEvent struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PointFrame *PointFrame            `protobuf:"bytes,1,opt,name=point_frame,json=pointFrame,proto3" json:"point_frame,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ProcessedPointsEvent) Reset() {
	*x = ProcessedPointsEvent{}
	mi := &file_horus_pb_point_point_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessedPointsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessedPointsEvent) ProtoMessage() {}

func (x *ProcessedPointsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_point_point_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProcessedPointsEvent) GetPointFrame() *PointFrame {
	if x != nil {
		return x.xxx_hidden_PointFrame
	}
	return nil
}

func (x *ProcessedPointsEvent) SetPointFrame(v *PointFrame) {
	x.xxx_hidden_PointFrame = v
}

func (x *ProcessedPointsEvent) HasPointFrame() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PointFrame != nil
}

func (x *ProcessedPointsEvent) ClearPointFrame() {
	x.xxx_hidden_PointFrame = nil
}

type ProcessedPointsEvent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PointFrame *PointFrame
}

func (b0 ProcessedPointsEvent_builder) Build() *ProcessedPointsEvent {
	m0 := &ProcessedPointsEvent{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PointFrame = b.PointFrame
	return m0
}

type AggregatedPointEvents struct {
	state             protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Events *[]*ProcessedPointsEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AggregatedPointEvents) Reset() {
	*x = AggregatedPointEvents{}
	mi := &file_horus_pb_point_point_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregatedPointEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedPointEvents) ProtoMessage() {}

func (x *AggregatedPointEvents) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_point_point_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AggregatedPointEvents) GetEvents() []*ProcessedPointsEvent {
	if x != nil {
		if x.xxx_hidden_Events != nil {
			return *x.xxx_hidden_Events
		}
	}
	return nil
}

func (x *AggregatedPointEvents) SetEvents(v []*ProcessedPointsEvent) {
	x.xxx_hidden_Events = &v
}

type AggregatedPointEvents_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Events []*ProcessedPointsEvent
}

func (b0 AggregatedPointEvents_builder) Build() *AggregatedPointEvents {
	m0 := &AggregatedPointEvents{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Events = &b.Events
	return m0
}

// Header for storing per-frame info of the point cloud frame
type PointFrame_Header struct {
	state                                  protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_CalibrationTransform        *metadata_pb.AffineTransform3F `protobuf:"bytes,1,opt,name=calibration_transform,json=calibrationTransform,proto3" json:"calibration_transform,omitempty"`
	xxx_hidden_LidarId                     string                         `protobuf:"bytes,2,opt,name=lidar_id,json=lidarId,proto3" json:"lidar_id,omitempty"`
	xxx_hidden_PointCloudCreationTimestamp *metadata_pb.Timestamp         `protobuf:"bytes,4,opt,name=point_cloud_creation_timestamp,json=pointCloudCreationTimestamp,proto3" json:"point_cloud_creation_timestamp,omitempty"`
	xxx_hidden_StaticEnvLearningProgress   uint32                         `protobuf:"varint,5,opt,name=static_env_learning_progress,json=staticEnvLearningProgress,proto3,oneof" json:"static_env_learning_progress,omitempty"`
	XXX_raceDetectHookData                 protoimpl.RaceDetectHookData
	XXX_presence                           [1]uint32
	unknownFields                          protoimpl.UnknownFields
	sizeCache                              protoimpl.SizeCache
}

func (x *PointFrame_Header) Reset() {
	*x = PointFrame_Header{}
	mi := &file_horus_pb_point_point_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PointFrame_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointFrame_Header) ProtoMessage() {}

func (x *PointFrame_Header) ProtoReflect() protoreflect.Message {
	mi := &file_horus_pb_point_point_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PointFrame_Header) GetCalibrationTransform() *metadata_pb.AffineTransform3F {
	if x != nil {
		return x.xxx_hidden_CalibrationTransform
	}
	return nil
}

func (x *PointFrame_Header) GetLidarId() string {
	if x != nil {
		return x.xxx_hidden_LidarId
	}
	return ""
}

func (x *PointFrame_Header) GetPointCloudCreationTimestamp() *metadata_pb.Timestamp {
	if x != nil {
		return x.xxx_hidden_PointCloudCreationTimestamp
	}
	return nil
}

func (x *PointFrame_Header) GetStaticEnvLearningProgress() uint32 {
	if x != nil {
		return x.xxx_hidden_StaticEnvLearningProgress
	}
	return 0
}

func (x *PointFrame_Header) SetCalibrationTransform(v *metadata_pb.AffineTransform3F) {
	x.xxx_hidden_CalibrationTransform = v
}

func (x *PointFrame_Header) SetLidarId(v string) {
	x.xxx_hidden_LidarId = v
}

func (x *PointFrame_Header) SetPointCloudCreationTimestamp(v *metadata_pb.Timestamp) {
	x.xxx_hidden_PointCloudCreationTimestamp = v
}

func (x *PointFrame_Header) SetStaticEnvLearningProgress(v uint32) {
	x.xxx_hidden_StaticEnvLearningProgress = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *PointFrame_Header) HasCalibrationTransform() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CalibrationTransform != nil
}

func (x *PointFrame_Header) HasPointCloudCreationTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PointCloudCreationTimestamp != nil
}

func (x *PointFrame_Header) HasStaticEnvLearningProgress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PointFrame_Header) ClearCalibrationTransform() {
	x.xxx_hidden_CalibrationTransform = nil
}

func (x *PointFrame_Header) ClearPointCloudCreationTimestamp() {
	x.xxx_hidden_PointCloudCreationTimestamp = nil
}

func (x *PointFrame_Header) ClearStaticEnvLearningProgress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_StaticEnvLearningProgress = 0
}

type PointFrame_Header_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// / The calibration transformation (from sensor to origin coordinates)
	CalibrationTransform *metadata_pb.AffineTransform3F
	// Lidar ID should be unique among all lidars in the project.
	LidarId string
	// / The point cloud creation timestamp.
	PointCloudCreationTimestamp *metadata_pb.Timestamp
	// / Static environment learning progress.
	StaticEnvLearningProgress *uint32
}

func (b0 PointFrame_Header_builder) Build() *PointFrame_Header {
	m0 := &PointFrame_Header{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CalibrationTransform = b.CalibrationTransform
	x.xxx_hidden_LidarId = b.LidarId
	x.xxx_hidden_PointCloudCreationTimestamp = b.PointCloudCreationTimestamp
	if b.StaticEnvLearningProgress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_StaticEnvLearningProgress = *b.StaticEnvLearningProgress
	}
	return m0
}

var File_horus_pb_point_point_message_proto protoreflect.FileDescriptor

var file_horus_pb_point_point_message_proto_rawDesc = []byte{
	0x0a, 0x22, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x2f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x1a, 0x1e,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xda,
	0x03, 0x0a, 0x0a, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x37, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x48, 0x00,
	0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x1a, 0xb6, 0x02, 0x0a, 0x06,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x15, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x33, 0x66, 0x52, 0x14, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x64, 0x61,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x64, 0x61,
	0x72, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x1e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x1b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x44, 0x0a,
	0x1c, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x19, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x45, 0x6e, 0x76,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x65,
	0x6e, 0x76, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4a,
	0x04, 0x08, 0x03, 0x10, 0x06, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x22, 0xa8, 0x01, 0x0a, 0x10,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0f, 0x66, 0x6c, 0x61, 0x74,
	0x74, 0x65, 0x6e, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x07, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x07,
	0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73,
	0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x4d, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x35,
	0x0a, 0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x15, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x36,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2a, 0xd4, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x54, 0x54,
	0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x47, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4c,
	0x4f, 0x57, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x53, 0x49, 0x54, 0x59, 0x10, 0x04, 0x12, 0x12,
	0x0a, 0x0e, 0x45, 0x58, 0x43, 0x4c, 0x55, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x5a, 0x4f, 0x4e, 0x45,
	0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x10, 0x10, 0x12, 0x19,
	0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x5f, 0x44, 0x45, 0x54, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x5a, 0x4f, 0x4e, 0x45, 0x10, 0x20, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x46,
	0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x5a, 0x4f, 0x4e, 0x45, 0x10, 0x40, 0x12, 0x1a,
	0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x5f, 0x45, 0x58, 0x43, 0x4c, 0x55, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x5a, 0x4f, 0x4e, 0x45, 0x10, 0x80, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x50,
	0x41, 0x52, 0x53, 0x45, 0x5f, 0x4e, 0x4f, 0x49, 0x53, 0x45, 0x10, 0x80, 0x02, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_horus_pb_point_point_message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_horus_pb_point_point_message_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_horus_pb_point_point_message_proto_goTypes = []any{
	(PointAttribute)(0),                   // 0: horus.pb.PointAttribute
	(*PointFrame)(nil),                    // 1: horus.pb.PointFrame
	(*AttributedPoints)(nil),              // 2: horus.pb.AttributedPoints
	(*ProcessedPointsEvent)(nil),          // 3: horus.pb.ProcessedPointsEvent
	(*AggregatedPointEvents)(nil),         // 4: horus.pb.AggregatedPointEvents
	(*PointFrame_Header)(nil),             // 5: horus.pb.PointFrame.Header
	(*metadata_pb.AffineTransform3F)(nil), // 6: horus.pb.AffineTransform3f
	(*metadata_pb.Timestamp)(nil),         // 7: horus.pb.Timestamp
}
var file_horus_pb_point_point_message_proto_depIdxs = []int32{
	5, // 0: horus.pb.PointFrame.header:type_name -> horus.pb.PointFrame.Header
	2, // 1: horus.pb.PointFrame.points:type_name -> horus.pb.AttributedPoints
	1, // 2: horus.pb.ProcessedPointsEvent.point_frame:type_name -> horus.pb.PointFrame
	3, // 3: horus.pb.AggregatedPointEvents.events:type_name -> horus.pb.ProcessedPointsEvent
	6, // 4: horus.pb.PointFrame.Header.calibration_transform:type_name -> horus.pb.AffineTransform3f
	7, // 5: horus.pb.PointFrame.Header.point_cloud_creation_timestamp:type_name -> horus.pb.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_horus_pb_point_point_message_proto_init() }
func file_horus_pb_point_point_message_proto_init() {
	if File_horus_pb_point_point_message_proto != nil {
		return
	}
	file_horus_pb_point_point_message_proto_msgTypes[0].OneofWrappers = []any{}
	file_horus_pb_point_point_message_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_horus_pb_point_point_message_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_horus_pb_point_point_message_proto_goTypes,
		DependencyIndexes: file_horus_pb_point_point_message_proto_depIdxs,
		EnumInfos:         file_horus_pb_point_point_message_proto_enumTypes,
		MessageInfos:      file_horus_pb_point_point_message_proto_msgTypes,
	}.Build()
	File_horus_pb_point_point_message_proto = out.File
	file_horus_pb_point_point_message_proto_rawDesc = nil
	file_horus_pb_point_point_message_proto_goTypes = nil
	file_horus_pb_point_point_message_proto_depIdxs = nil
}
