syntax = "proto3";

import "horus/pb/logs/logs.proto";
import "horus/pb/logs/metadata.proto";

package horus.pb;

// A log message notifying users about some status.
message LogMessage {
  LogMetadata metadata = 1;
  LogData data = 2;
}

// Data attached to a `LogMessage`.
//
// This is automatically generated from `docs/logs.yaml`.
message LogData {
  oneof data {
    logs.Generic generic = 1;
    logs.Oom oom = 2;
    logs.RpcConnectionError rpc_connection_error = 3;
    logs.InvalidProjectName invalid_project_name = 4;
    logs.ProjectNotFound project_not_found = 5;
    logs.ProjectAlreadyExists project_already_exists = 6;
    logs.InvalidConfiguration invalid_configuration = 7;
    logs.EntityNotFound entity_not_found = 8;
    logs.ActiveProjectCannotBeDeleted active_project_cannot_be_deleted = 9;
    logs.RpcDisconnectionError rpc_disconnection_error = 10;
    logs.DroppedLogs dropped_logs = 11;
    logs.OpenedProject opened_project = 12;
    logs.CreatedProject created_project = 13;
    logs.ConfigUnavailable config_unavailable = 14;
    logs.InvalidRequest invalid_request = 15;
    logs.SanityCheckError sanity_check_error = 16;
    logs.BagFailedToOpen bag_failed_to_open = 17;
    logs.BagFailedToClose bag_failed_to_close = 18;
    logs.BagConversionFailed bag_conversion_failed = 19;
    logs.BagFailedToWrite bag_failed_to_write = 20;
    logs.CalibrationError calibration_error = 21;
    logs.ProjectManagerFailedToStartRecording project_manager_failed_to_start_recording = 22;
    logs.ProjectManagerFailedToStopRecording project_manager_failed_to_stop_recording = 23;
    logs.ServiceConnectionTimedOut service_connection_timed_out = 24;
    logs.BagRecorderAlreadyRunning bag_recorder_already_running = 25;
    logs.LicenseServerConnectionError license_server_connection_error = 26;
    logs.LicenseError license_error = 27;
    logs.LicenseNotFoundError license_not_found_error = 145;
    logs.LicenseExpiredError license_expired_error = 146;
    logs.LicenseExceededError license_exceeded_error = 147;
    logs.LicenseHostMachineError license_host_machine_error = 28;
    logs.LicensePrivilegeError license_privilege_error = 148;
    logs.LicenseActiveInfo license_active_info = 149;
    logs.MultipleLicensesWarning multiple_licenses_warning = 150;
    logs.LicenseCurrentLicenseStatusInfo license_current_license_status_info = 29;
    logs.BagRecordingStoppedInfo bag_recording_stopped_info = 30;
    logs.BagRecordingFailedToStart bag_recording_failed_to_start = 31;
    logs.BagRecordingStartedInfo bag_recording_started_info = 32;
    logs.ReplayRestartedInfo replay_restarted_info = 33;
    logs.InputSourceChangeRequestedInfo input_source_change_requested_info = 34;
    logs.InputSourceSwitchedInfo input_source_switched_info = 35;
    logs.RpcTimeoutWarning rpc_timeout_warning = 36;
    logs.CannotWriteLogFile cannot_write_log_file = 37;
    logs.PointCloudParsingFailureWarning point_cloud_parsing_failure_warning = 38;
    logs.LidarIsDead lidar_is_dead = 39;
    logs.LidarIsNotDeadAnymore lidar_is_not_dead_anymore = 40;
    logs.LidarIsObstructed lidar_is_obstructed = 41;
    logs.LidarIsNotObstructedAnymore lidar_is_not_obstructed_anymore = 42;
    logs.LidarIsTilted lidar_is_tilted = 43;
    logs.LidarIsNotTiltedAnymore lidar_is_not_tilted_anymore = 44;
    logs.LidarHasBeenAutomaticallyRecalibrated lidar_has_been_automatically_recalibrated = 45;
    logs.ReceivedFirstDataForLidar received_first_data_for_lidar = 46;
    logs.TerminationFailureError termination_failure_error = 47;
    logs.FrameProcessingError frame_processing_error = 48;
    logs.ThreadPoolUnavailableError thread_pool_unavailable_error = 49;
    logs.InvalidArgument invalid_argument = 50;
    logs.ComponentInitializationFailureFatal component_initialization_failure_fatal = 51;
    logs.UnhandledEnumCaseError unhandled_enum_case_error = 52;
    logs.BagEmptyError bag_empty_error = 53;
    logs.DiscardingDataError discarding_data_error = 54;
    logs.DiscardingDataWarning discarding_data_warning = 55;
    logs.NothingToProcess nothing_to_process = 56;
    logs.InvalidComponentConfiguration invalid_component_configuration = 57;
    logs.ChannelReceiverNotFoundWarning channel_receiver_not_found_warning = 58;
    logs.ModelLoadFailure model_load_failure = 59;
    logs.ModelExecutionFailureError model_execution_failure_error = 60;
    logs.ServiceReadyInfo service_ready_info = 61;
    logs.ModelPreparingInfo model_preparing_info = 62;
    logs.ModelInitializedInfo model_initialized_info = 63;
    logs.ModelInitializationFailureWarning model_initialization_failure_warning = 64;
    logs.RosSpinnerStoppedWarning ros_spinner_stopped_warning = 65;
    logs.ActorSystemUnavailableError actor_system_unavailable_error = 66;
    logs.ConfigNodeNotFoundError config_node_not_found_error = 67;
    logs.BagTimestampOutOfOrderError bag_timestamp_out_of_order_error = 68;
    logs.BagReplayUnexpectedTimestampError bag_replay_unexpected_timestamp_error = 69;
    logs.WebsocketClosedInfo websocket_closed_info = 70;
    logs.WebsocketOpenedInfo websocket_opened_info = 71;
    logs.SubscriberDisconnectedInfo subscriber_disconnected_info = 72;
    logs.ThreadPoolSlowingDownWarning thread_pool_slowing_down_warning = 73;
    logs.ThreadPoolNotRespondingWarning thread_pool_not_responding_warning = 74;
    logs.ThreadPoolBrokenPromiseWarning thread_pool_broken_promise_warning = 75;
    logs.BoxFittingPointsBelowBaseWarning box_fitting_points_below_base_warning = 76;
    logs.FailedToRemoveStalePointsWarning failed_to_remove_stale_points_warning = 77;
    logs.IrregularBroadcastingPeriodWarning irregular_broadcasting_period_warning = 78;
    logs.ClustererPointsOutOfRangeWarning clusterer_points_out_of_range_warning = 79;
    logs.InternalError internal_error = 80;
    logs.InternalFatal internal_fatal = 81;
    logs.ServiceStartingInfo service_starting_info = 82;
    logs.ConfigNodeNotFoundFatal config_node_not_found_fatal = 83;
    logs.ServiceSetupError service_setup_error = 84;
    logs.FilesystemError filesystem_error = 85;
    logs.InvalidPresetWarning invalid_preset_warning = 86;
    logs.WebsocketFailedClearPendingError websocket_failed_clear_pending_error = 87;
    logs.WebsocketFailedToStopError websocket_failed_to_stop_error = 88;
    logs.WebsocketFailedToCreateError websocket_failed_to_create_error = 89;
    logs.UnexpectedRpcError unexpected_rpc_error = 90;
    logs.LicensePollFailed license_poll_failed = 91;
    logs.LicenseExpiredWarning license_expired_warning = 92;
    logs.LicenseUsageExceededWarning license_usage_exceeded_warning = 93;
    logs.StaticThreadPoolSlowTaskWarning static_thread_pool_slow_task_warning = 94;
    logs.RpcUnsupportedServiceWarning rpc_unsupported_service_warning = 95;
    logs.WebsocketHandlerProblem websocket_handler_problem = 96;
    logs.WebsocketDeserializeError websocket_deserialize_error = 97;
    logs.WebsocketExpiredRpcEndpointError websocket_expired_rpc_endpoint_error = 98;
    logs.WebsocketQueueOverloadedWarning websocket_queue_overloaded_warning = 99;
    logs.RpcFailedToNotifyWarning rpc_failed_to_notify_warning = 100;
    logs.ConfigSubscriptionFailedWarning config_subscription_failed_warning = 101;
    logs.ThreadPoolClampedWorkersWarning thread_pool_clamped_workers_warning = 102;
    logs.StoppingHorusBagRecorderAlreadyStopped stopping_horus_bag_recorder_already_stopped = 103;
    logs.RecorderConfigUpdateWhileRunning recorder_config_update_while_running = 104;
    logs.ClampingDataWarning clamping_data_warning = 105;
    logs.LidarIncompatibleValues lidar_incompatible_values = 106;
    logs.CannotDetermineContainerIdError cannot_determine_container_id_error = 107;
    logs.StartedLidarDriver started_lidar_driver = 108;
    logs.CannotStartLidarDriver cannot_start_lidar_driver = 109;
    logs.StoppedLidarDriver stopped_lidar_driver = 110;
    logs.CannotStopLidarDriver cannot_stop_lidar_driver = 111;
    logs.RestartedLidarDriver restarted_lidar_driver = 112;
    logs.CannotRestartLidarDriver cannot_restart_lidar_driver = 113;
    logs.RemovedUnusedLidarDriver removed_unused_lidar_driver = 114;
    logs.CannotRemoveUnusedLidarDriver cannot_remove_unused_lidar_driver = 115;
    logs.LidarDriverGcFailure lidar_driver_gc_failure = 116;
    logs.IdSpaceExhausted id_space_exhausted = 117;
    logs.PreprocessingToPointAggregatorPointsSkipped preprocessing_to_point_aggregator_points_skipped = 118;
    logs.MinMsgIntervalLessThanThreshold min_msg_interval_less_than_threshold = 119;
    logs.FailedToCleanupRosWarning failed_to_cleanup_ros_warning = 120;
    logs.RpcDisconnectedWarning rpc_disconnected_warning = 121;
    logs.RpcUnhandledError rpc_unhandled_error = 122;
    logs.TimeDiffOutOfRangeWarning time_diff_out_of_range_warning = 123;
    logs.TensorrtLog tensorrt_log = 124;
    logs.BuildingTensorrtEngineInfo building_tensorrt_engine_info = 125;
    logs.LoadingTensorrtEngineInfo loading_tensorrt_engine_info = 126;
    logs.CalibrationMapNotFound calibration_map_not_found = 127;
    logs.CalibrationMapNotValid calibration_map_not_valid = 128;
    logs.CalibrationMapPathAlreadyExists calibration_map_path_already_exists = 129;
    logs.FailedToSaveCalibrationMap failed_to_save_calibration_map = 130;
    logs.FailedToRemoveCalibrationMap failed_to_remove_calibration_map = 131;
    logs.FailedToIterateInDirectory failed_to_iterate_in_directory = 132;
    logs.MapBasedCalibrationWithoutMapLoading map_based_calibration_without_map_loading = 133;
    logs.MapBasedCalibrationAlreadyRunning map_based_calibration_already_running = 134;
    logs.CancelMapBasedCalibrationNotRunning cancel_map_based_calibration_not_running = 135;
    logs.BagStreamNotFound bag_stream_not_found = 136;
    logs.EvaluationBagStartedInfo evaluation_bag_started_info = 137;
    logs.EvaluationBagFinishedInfo evaluation_bag_finished_info = 138;
    logs.BagNotFound bag_not_found = 139;
    logs.BuildingPipelineInfo building_pipeline_info = 140;
    logs.BagIsNotEvaluation bag_is_not_evaluation = 141;
    logs.HorusBagRunning horus_bag_running = 142;
    logs.AutoGroundCalibrationWarning auto_ground_calibration_warning = 143;
    logs.AutoGroundCalibrationError auto_ground_calibration_error = 144;
    logs.ObjectDetectorNotLoadedWarning object_detector_not_loaded_warning = 151;
    logs.CalibrationIsRunningError calibration_is_running_error = 152;
    logs.ModelInitInProgressInfo model_init_in_progress_info = 153;
    logs.RpcTimeoutWithResolutionWarning rpc_timeout_with_resolution_warning = 154;
    logs.CalibrationWasCancelledInfo calibration_was_cancelled_info = 155;
    logs.CalibrationMapRecordingFailedToStart calibration_map_recording_failed_to_start = 156;
    logs.DetectionPipelineRequestedResetInfo detection_pipeline_requested_reset_info = 157;
    logs.PreprocessingServicePipelineUnavailable preprocessing_service_pipeline_unavailable = 158;
    logs.CircularRecordingDisabledWarning circular_recording_disabled_warning = 159;
    logs.SnapshotAlreadyRunningWarning snapshot_already_running_warning = 160;
    logs.ActiveProjectChangedInfo active_project_changed_info = 161;
    logs.ProjectConfigUpdatedInfo project_config_updated_info = 162;
    logs.InvalidLidarTimestamp invalid_lidar_timestamp = 163;
    logs.CalibrationAccumulatingPointsInfo calibration_accumulating_points_info = 164;
    logs.SparseNoiseFilterUsageNonRotationalLidars sparse_noise_filter_usage_non_rotational_lidars = 165;
    logs.FileWriteError file_write_error = 166;
    logs.LicenseForbiddenFeature license_forbidden_feature = 167;
  }
}
