syntax = "proto3";

package horus.pb;

// Metadata attached to a `LogMessage`.
message LogMetadata {
  // Severity of a log message.
  //
  // Must be kept in sync with backend/common/logs/common.h.
  enum Severity {
    SEVERITY_UNSPECIFIED = 0;
    SEVERITY_DEBUG = 1;
    SEVERITY_INFO = 2;
    SEVERITY_WARNING = 3;
    SEVERITY_ERROR = 4;
    SEVERITY_FATAL = 5;
  }

  // Location in source code where a log was created.
  message SourceLocation {
    string file = 1;
    uint32 line = 2;
  }

  // Duration in time.
  message Duration {
    // We don't care about sub-ms accuracy.
    uint64 ms = 1;
  }
  // Timestamp in time.
  message Timestamp {
    // We don't care about sub-ms accuracy.
    uint64 ms_since_epoch = 1;
  }

  // Time at which the log was generated represented as the number of ms since
  // the epoch.
  //
  // `Timestamp` is not used here since it is processed by our plugin, which
  // depends on `horus::common`, which depends on this file.
  uint64 ms_since_epoch = 1;
  // Severity of the log.
  Severity severity = 2;
  // Identifier of the node that sent the log.
  string node_id = 3;
}

// `LogMessage` and `LogData` are auto-generated by
// common/tools/codegen/logs.ts.
